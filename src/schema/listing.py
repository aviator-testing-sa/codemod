#
# listing.py
#
#
from sqlalchemy import orm
from sqlalchemy.orm import Mapped, mapped_column, relationship
from sqlalchemy import String, Boolean, Integer, Text, DateTime, ForeignKey
from main import db
from base import Base


class Listing(Base):
    __tablename__ = 'listing'

    # who's doing the listing
    userid: Mapped[int] = mapped_column(ForeignKey('user.id'), nullable=False)

    #
    status: Mapped[str] = mapped_column(String)     # draft|published

    # info
    name: Mapped[str] = mapped_column(String, nullable=False, index=True)
    domain: Mapped[str] = mapped_column(String, nullable=False, index=True)
    category: Mapped[str] = mapped_column(String, nullable=False, index=True)
    slug: Mapped[str] = mapped_column(String, nullable=False, index=True) # autogenerated

    app_ios: Mapped[bool] = mapped_column(Boolean, default=False)
    app_android: Mapped[bool] = mapped_column(Boolean, default=False)
    web_app: Mapped[bool] = mapped_column(Boolean, default=False)
    iot: Mapped[bool] = mapped_column(Boolean, default=False)
    robotics: Mapped[bool] = mapped_column(Boolean, default=False)

    # images
    cover_image_url: Mapped[str] = mapped_column(String)
    product_icon_url: Mapped[str] = mapped_column(String)
    # other images are stored as ListingImage in image schema

    incorporated: Mapped[bool] = mapped_column(Boolean, default=False)
    employees: Mapped[int] = mapped_column(Integer)

    product_info: Mapped[str] = mapped_column(Text)
    tech_stack: Mapped[str] = mapped_column(Text)
    founder_info: Mapped[str] = mapped_column(Text)

    # busienss metrics
    launch_date: Mapped[DateTime] = mapped_column(DateTime)      # day it was launched
    mau: Mapped[int] = mapped_column(Integer)               # monthly active users
    revenue_cents: Mapped[int] = mapped_column(Integer)     # monthly revenue in cents
    investment_cents: Mapped[int] = mapped_column(Integer)  # total investment
    total_customers: Mapped[int] = mapped_column(Integer)   # size of customer base
    misc_info: Mapped[str] = mapped_column(Text)            # additional info

    # links
    linkedin: Mapped[str] = mapped_column(String)
    angellist: Mapped[str] = mapped_column(String)
    crunchbase: Mapped[str] = mapped_column(String)

    user: Mapped["User"] = relationship(back_populates="listings")

    @property
    def cover_image(self):
        return self.cover_image_url or '/static/images/bg.jpg'

    @property
    def product_icon(self):
        return self.product_icon_url or '/static/images/avatar.jpg'

    @classmethod
    def filter_like_name(cls, name, asmatch=False):
        if asmatch:
            return cls.name.match(name)
        return cls.name.like('%{}%'.format(name))

    @classmethod
    def filter_like_domain(cls, domain, asmatch=False):
        if asmatch:
            return cls.domain.match(name)
        return cls.domain.like('%{}%'.format(domain))

    @classmethod
    def filter_like_category(cls, category, asmatch=False):
        if asmatch:
            return cls.category.match(category)
        return cls.category.like('%{}%'.format(category))
